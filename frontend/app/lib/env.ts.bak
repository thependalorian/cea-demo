/**
 * Environment variable validation utilities
 * This ensures required environment variables are present at runtime
 */

export function validateEnvironmentVariables(): { isValid: boolean; missingVars: string[] } {
  const requiredVars = [
    'NEXT_PUBLIC_SUPABASE_URL',
    'NEXT_PUBLIC_SUPABASE_ANON_KEY',
    'NEXT_PUBLIC_AGENT_ENDPOINT',
    'NEXT_PUBLIC_RAG_PIPELINE_ENDPOINT',
    'NEXT_PUBLIC_BASE_URL'
  ];

  const missingVars = requiredVars.filter(
    varName => typeof process.env[varName] === 'undefined' || process.env[varName] === ''
  );

  return {
    isValid: missingVars.length === 0,
    missingVars
  };
}

export function logEnvironmentStatus(): void {
  const { isValid, missingVars } = validateEnvironmentVariables();

  if (!isValid) {
    console.warn(
      `‚ö†Ô∏è Environment validation failed - missing variables: ${missingVars.join(
        ', '
      )}. This may cause application errors.`
    );
  } else {
    console.log('‚úÖ Environment validation passed - all required variables are present.');
  }

  // Log the current environment
  console.log(`üåç Running in ${process.env.NODE_ENV || 'development'} environment`);
}

export function getRequiredEnvVar(name: string): string {
  const value = process.env[name];
  if (!value) {
    throw new Error(`Required environment variable ${name} is missing`);
  }
  return value;
}

export function getOptionalEnvVar(name: string, defaultValue: string = ''): string {
  return process.env[name] || defaultValue;
} 